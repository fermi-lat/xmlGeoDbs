<!-- $Header: /nfs/slac/g/glast/ground/cvs/xmlGeoDbs/xml/flight/flightDerivedConstants.xml,v 1.25 2007/08/17 19:56:16 jrb Exp $ -->
    <derived>
      &CALDerived;

      &TKRDerived;

      &NADDerived;

      &extraDerived;

      <derCategory name="misc">
        <overview>Stuff that doesn't fit elsewhere</overview>

    <!-- a couple convenience numbers -->
        <const name="xNumM1" uType="count" type="int">
          <notes>Convenience number</notes>
          <minus>
            <refer refTo="xNum" />
            <const value="1" uType="count" />
          </minus>
        </const>
        <const name="yNumM1" uType="count" type="int">
          <notes>Convenience number</notes>
          <minus>
            <refer refTo="yNum" />
            <const value="1" uType="count" />
          </minus>
        </const>

        <const name="maxLog" uType="count" type="int" >
          <notes>Upper limit on CsI log idField values</notes>
          <minus>
            <refer refTo="nCsIPerLayer" />
            <const value="1" uType="count" />
          </minus>
        </const>


<!-- Essentially stay-clear for full array of trackers.  Grid may
     be wider. -->
	<const name="towersTotalX">
          <notes>Meant to be X width of the array of tracker towers;
           doesn't include grid</notes>
          <add>
            <mul>
              <refer refTo="xNumM1" />
              <refer refTo="towerPitch" />
            </mul>
            <refer refTo="TKRTransverseStayClear" />
          </add>
        </const>

	<const name="towersTotalY">
          <notes>Meant to be Y width of the array of tracker towers;
           doesn't include grid</notes>
          <refer refTo="towersTotalX" />
        </const>

<!-- Compute total Z by adding up
            CAL height
            cal-tracker gap
            (ntray-1)* inter-tray spacing
            Z of top half of top tray, bottom half of bottom tray
              (which is the same as Z of a single outer tray)
-->
	<const name="towersTotalZ">  
          <notes>Height of cal (stay clear) + height of tracker (S-C) 
                      + gap between.
                  Also add gap between CAL and
          </notes>
          <add>
            <refer refTo="CALVertStayClear" />
            <refer refTo="NADGridFlangeZ" />
            <refer refTo="CALGridFrameGap" />
            <refer refTo="TKRVertStayClear" />
          </add>                               
        </const>

        <const name="towersTotalHalfZ">
          <notes>Convenience</notes>
          <quo>
            <refer refTo="towersTotalZ" />
            <const value="2" uType = "count" />
          </quo>
        </const>


        <const name="oneNoTKR_z" >
          <notes> Height of a CAL-only tower (CAL + grid)</notes>
          <add>
            <refer refTo="NADGridFlangeZ" />
            <refer refTo="CALGridFrameGap" />
            <refer refTo="CALVertStayClear" />
          </add>
        </const>

        <const name="oneNoTKR_dz" >
          <notes> Z-displacement of a oneCalTower (no tracker) w.r.t 
                  allTowers volume.  It's at the bottom </notes>
          <half>
            <minus>
              <refer refTo="oneNoTKR_z" />
              <refer refTo="towersTotalZ" />
            </minus>
          </half>
        </const>

        <const name="CAL_dz" >
          <notes>Offset of CAL stay-cleaar within single-tower volume.
                It's just below flange and min. 1.5 mm gap.
                </notes>
          <minus>
            <refer refTo="towersTotalHalfZ" />
            <add>
              <refer refTo="TKRVertStayClear" />
              <refer refTo="CALGridFrameGap" />
              <refer refTo="NADGridFlangeZ" />
              <half>
                <refer refTo="CALVertStayClear" />
              </half>
            </add>
          </minus>
        </const>

        <const name="TKR_dz" >
          <notes>Offset of TKR within single-tower volume</notes>
          <minus>     
            <refer refTo="towersTotalHalfZ" />
              <half>
                <refer refTo="TKRVertStayClear" />
              </half>
          </minus>
        </const>
        
         <const name="TKRFudge_dz-Old" >
          <notes> Extra offset to get TKR bottom to touch grid.
          Depends on TkrTotalZ, which is entered by hand.
          This may go away if geometry can learn to do this by itself.</notes>
          <half>
            <minus>
              <refer refTo="TKRTotalZ" />
              <refer refTo="TKRVertStayClear" />
            </minus>
          </half>
        </const>
     
      </derCategory>

      &ACDDerived;


      <derCategory name="derGlobal" save="true" >
        <overview>A few more constants needed for the outermost 
                 LAT compositions</overview>
        <const name="LATX" >
          <notes>X-dimension of an envelope for the LAT,
                not including thermal blanket</notes>
          <refer refTo="ACDTotalX" />
        </const>
        <const name="LATY" >
          <notes>Y-dimension of an envelope for the LAT,
                 not including thermal blanket</notes>
          <refer refTo="ACDTotalY" />
        </const>

        <const name="LATZ" >
          <notes>Z-dimension of an envelope for the LAT,
                 not including thermal blanket</notes>
          <max>
            <refer refTo="ACDSide_z" />
            <add>
              <refer refTo="sideOverlap" />
              <refer refTo="ACDTop_z" />
              <refer refTo="ACDTopSupportThick" />
                 <!-- Guess at standoff value  -->
              <refer refTo="ACDTKRStayClear" />
              <refer refTo="towersTotalZ" />
            </add>
          </max>
        </const>

        <const name="bigXZDim" >
          <notes>Something big enough (for X and Z) to position 
                 everything inside,
                 with origin where it should be, at the very front
                 of the grid.</notes>
          <mul>
            <const value="2" uType="count" />
            <max>
              <add>
                <refer refTo = "towersTotalZ" />
<!--                <refer refTo = "NADSpacecraftZ" /> -->
                <refer refTo = "SC_z" />
              </add>
              <refer refTo = "ACDTotalX" />
            </max>
          </mul>
        </const>
        
        <const name="biggerZDim" >
          <notes> this is to make room for moving the LAT around in z, 
            to look for  bad hardwired consts. The formula is:
                    biggerZDim = bigXZDim + 2* abs(globalOffset_dz)</notes>
          <add>
            <refer refTo = "bigXZDim" />
            <mul>
              <max>
                <refer refTo = "globalOffset_dz" />
                <uminus>
                  <refer refTo = "globalOffset_dz" /> 
                </uminus>
              </max>
              <const value="2" uType="count" />
            </mul>
          </add>
        </const>

        <const name="NADTotalPanelLen" >
          <notes>Length of panel proper plus connecting rod</notes>
          <add>
            <refer refTo="NADSolarRodLength" />
            <refer refTo="NADSolarPLength" />
          </add>
        </const>

        <const name="bigYDim" >
          <notes>Something big enough to use as Y dimension of
                 envelope (takes into account solar panels)
                 </notes>
          <mul>
            <const value = "2" uType="count" />
            <add>
              <refer refTo="NADTotalPanelLen" />
              <const value = "100" />          
              <refer refTo="SCWidth" />
            </add>
          </mul>
        </const>
             


        <const name="LATZHalf" >
          <notes>convenience</notes>
          <quo>
            <refer refTo="LATZ" />
            <const value="2" uType="count" />
          </quo>
        </const>

        <const name="towersTrans" >
          <notes>Transverse dimension of envelope containing the towers
          </notes>
          <mul>
            <refer refTo="towerPitch" />
            <const value="4" uType="count" />
          </mul>
        </const>
            
        <const name="innerTowers_dt" >
          <notes>Transverse displacement of towers in row (column) 2</notes>
          <half>
            <refer refTo="towerPitch" />
          </half>
        </const>

        <const name="outerTowers_dt" >
          <notes>Transverse displacement of towers in row (column) 3</notes>
          <add>
            <refer refTo="towerPitch" />
            <refer refTo="innerTowers_dt" />
          </add>
        </const>

        <const name="innerTowers_dtn" >
          <notes>Transverse displacement of towers in row (column) 1 </notes>
          <uminus>
            <refer refTo="innerTowers_dt" />
          </uminus>
        </const>

        <const name="outerTowers_dtn" >
          <notes>Transverse displacement of towers in row (column) 0 </notes>
          <uminus>
            <refer refTo="outerTowers_dt" />
          </uminus>
        </const>

        <const name="towers_dz" >
          <notes>Displacement necessary to get towers origin in the
                 right place, namely at the front face of the grid
                 **Decreased by gap between CAL and TKR, nearly the
                   same as grid flange height, as of 29 Apr 2003**
                 </notes>
          <minus>
            <refer refTo="towersTotalHalfZ" />
            <add>
              <refer refTo="CALVertStayClear" />
              <refer refTo="NADGridFlangeZ" />
              <refer refTo="CALGridFrameGap" />
            </add>
          </minus>
        </const>

<!--
        <const name="spacecraft_dz">
          <notes>Z displacement of spacecraft relative to Ritz origin.
                It goes immediately under the 2nd layer of LAT electronics.
                All the modules in this layer have same offset and
                same z-dimension</notes>
          <minus>
            <refer refTo="NAD_LAT_L2Electronics_dz" />
            <add>
              <half>
                <refer refTo="NADpdu_z" />
              </half>
              <half> 
                <
                 <refer refTo="NADSpacecraftZ" />
              </half>
            </add>
          </minus>
        </const>
-->
<!-- have to do analogous 5 constants for side tile locations -->

        <const name="tileSide_dz">
          <notes>displacement in z of side tiles rel. to Ritz origin.
            Compute relative to ACDTop_d.  Find coordinate of top of
            ACD side, then subtract half side height.
          </notes>
          <minus>
            <add>
              <refer refTo="ACDTop_d" />
              <refer refTo="sideOverlap"/>
              <half>
                <refer refTo="ACDTop_z"/>
              </half>
            </add>               
            <half>
               <refer refTo="ACDSide_z" />
            </half>
          </minus>
        </const>

<!-- compute Z displacement for each side tile row independently -->
        <const name="tileSideR0_dz">
          <notes>displacement of top row of side tiles rel. to Ritz origin.
            Compute relative to ACDTop_d.  Find coordinate of top of
            ACD side, then subtract half R0 height
          </notes>
          <minus>
            <add>
              <refer refTo="ACDTileMaxZ" />
              <refer refTo="sideOverlap"/>
            </add>               
            <half>
               <refer refTo="sideTileHeight0" />
            </half>
          </minus>
        </const>

        <const name="tileSideR1_dz">
          <notes>Compute from displacement of R0</notes>
          <minus>
            <refer refTo="tileSideR0_dz" />
            <add>
              <half>
                <add>
                  <refer refTo="sideTileHeight0" />
                  <refer refTo="sideTileHeight1" />
                </add>
              </half>
              <refer refTo="sideVerticalGap" />
            </add>
          </minus>
        </const>

        <const name="tileSideR2_dz">
          <notes>Compute from displacement of R1</notes>
          <minus>
            <refer refTo="tileSideR1_dz" />
            <add>
              <half>
                <add>
                  <refer refTo="sideTileHeight1" />
                  <refer refTo="sideTileHeight2" />
                </add>
              </half>
              <refer refTo="sideVerticalGap" />
            </add>
          </minus>
        </const>

        <const name="tileSideR3_dz">
          <notes>Compute from displacement of R2</notes>
          <minus>
            <refer refTo="tileSideR2_dz" />
            <add>
              <half>
                <add>
                  <refer refTo="sideTileHeight2" />
                  <refer refTo="sideTileHeight3" />
                </add>
              </half>
              <refer refTo="sideVerticalGap" />
            </add>
          </minus>
        </const>

        <!-- define a bunch of displacements for elements inside oneNoTKR
             in terms of their displacements in oneTower.  Everybody
             has to move up. -->
        <const name="gridFlangeNoTKR_dz" >
          <notes> adjust for placement in smaller envelop</notes>
          <minus>
            <refer refTo="gridFlange_dz" />
            <refer refTo="oneNoTKR_dz" />
          </minus>
        </const>

        <const name="gridWebNoTKR_dz" >
          <notes> adjust for placement in smaller envelop</notes>
          <minus>
            <refer refTo="gridWeb_dz" />
            <refer refTo="oneNoTKR_dz" />
          </minus>
        </const>

        <const name="CALNoTKR_dz" >
          <notes> adjust for placement in smaller envelop</notes>
          <minus>
            <refer refTo="CAL_dz" />
            <refer refTo="oneNoTKR_dz" />
          </minus>
        </const>

      </derCategory>

   </derived>











