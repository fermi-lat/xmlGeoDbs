<!-- $Header: /nfs/slac/g/glast/ground/cvs/xmlGeoDbs/xml/flightSlab/flightSlabDerivedConstants.xml,v 1.1 2003/01/08 23:35:05 jrb Exp $ -->
    <derived>
      &CALDerived;

      &TKRDerived;

      <derCategory name="misc">
        <overview>Stuff that doesn't fit elsewhere</overview>

    <!-- a couple convenience numbers -->
        <const name="xNumM1" uType="count" type="int">
          <notes>Convenience number</notes>
          <minus>
            <refer refTo="xNum" />
            <const value="1" uType="count" />
          </minus>
        </const>
        <const name="yNumM1" uType="count" type="int">
          <notes>Convenience number</notes>
          <minus>
            <refer refTo="yNum" />
            <const value="1" uType="count" />
          </minus>
        </const>

        <const name="maxLog" uType="count" type="int" >
          <notes>Upper limit on CsI log idField values</notes>
          <minus>
            <refer refTo="nCsIPerLayer" />
            <const value="1" uType="count" />
          </minus>
        </const>


<!-- Essentially stay-clear for full array of trackers.  Grid may
     be wider. -->
	<const name="towersTotalX">
          <notes>Meant to be X width of the array of tracker towers;
           doesn't include grid</notes>
          <add>
            <mul>
              <refer refTo="xNumM1" />
              <refer refTo="towerPitch" />
            </mul>
            <refer refTo="TKRTransverseStayClear" />
          </add>
        </const>

	<const name="towersTotalY">
          <notes>Meant to be Y width of the array of tracker towers;
           doesn't include grid</notes>
          <refer refTo="towersTotalX" />
        </const>

<!-- Compute total Z by adding up
            CAL height
            cal-tracker gap
            (ntray-1)* inter-tray spacing
            Z of top half of top tray, bottom half of bottom tray
              (which is the same as Z of a single outer tray)
-->
	<const name="towersTotalZ">  
<notes>Height of cal (stay clear) + height of tracker (S-C) + gap between
</notes>
          <add>
            <refer refTo="CALVertStayClear" />
            <refer refTo="calTrackerGap" />
            <refer refTo="TKRVertStayClear" />
          </add>                               
        </const>

        <const name="towersTotalHalfZ">
          <notes>Convenience</notes>
          <quo>
            <refer refTo="towersTotalZ" />
            <const value="2" uType = "count" />
          </quo>
        </const>

        <const name="CAL_dz" >
          <notes>Offset of CAL within single-tower volume</notes>
          <add>
            <uminus>
              <refer refTo="towersTotalHalfZ" />
            </uminus>
            <quo>
              <refer refTo="CALVertStayClear" />
              <const value="2" uType="count" />
            </quo>
          </add>
        </const>

        <const name="TKR_dz" >
          <notes>Offset of TKR within single-tower volume</notes>
          <minus>
            <refer refTo="towersTotalHalfZ" />
            <quo>
              <refer refTo="TKRVertStayClear" />
              <const value="2" uType="count" />
            </quo>
          </minus>
        </const>

        <const name="gridFlange_dz">
          <notes>Z-Offset of grid flange pieces within single-tower volume.
          </notes>
          <minus>
            <refer refTo="towersTotalHalfZ" /> <!-- start at top -->
            <add>
              <refer refTo="TKRVertStayClear" />
              <quo>
                <refer refTo="NADGridFlangeZ" />
                <const value="2" uType="count" />
              </quo>
            </add>
          </minus>
        </const>

        <const name="gridWeb_dz" >
          <notes>Z-Offset of grid web pieces within single-tower volume</notes>
          <minus>
            <refer refTo="gridFlange_dz" />
            <quo>
              <add>
                <refer refTo="NADGridFlangeZ" />
                <refer refTo="NADGridWebZ" />
              </add>
              <const value="2" uType="count" />
            </quo>
          </minus>
        </const>

        <const name="gridFlange_dt" >
          <notes>Transverse offset of per-tower grid flange pieces</notes>
          <quo>
            <minus>
              <refer refTo="towerPitch" />
              <refer refTo="NADGridFlangeInnerHalf"/>
            </minus>
            <const value="2" uType="count" />
          </quo>
        </const>

        <const name="gridFlange_dtn" >
          <notes>Negative transverse offset of per-tower grid flange pieces</notes>
          <uminus>
            <refer refTo="gridFlange_dt" />
          </uminus>
        </const>

        <const name="gridWeb_dt" >
          <notes>Transverse offset of per-tower grid web pieces</notes>
          <quo>
            <minus>
              <refer refTo="towerPitch" />
              <refer refTo="NADGridWebInnerHalf"/>
            </minus>
            <const value="2" uType="count" />
          </quo>
        </const>
        
        <const name="gridWeb_dtn" >
          <notes>Negative transverse offset of per-tower grid web pieces</notes>
          <uminus>
            <refer refTo="gridWeb_dt" />
          </uminus>
        </const>
        
        <const name="LATGridFlange_dt" >
          <notes>Transverse offset of LAT-wide grid flange pieces</notes>
          <quo>
            <minus>
              <refer refTo="NADGridFlangeWidth" />
              <refer refTo="NADGridFlangeOutsideWidth" />
            </minus>
            <const value="2" uType="count" />
          </quo>
        </const>
        
        <const name="LATGridFlange_dtn" >
          <notes>Neg. transverse offset of LAT-wide grid flange pieces</notes>
          <uminus>
            <refer refTo="LATGridFlange_dt" />
          </uminus>
        </const>
        
        <const name="LATGridWeb_dt" >
          <notes>Transverse offset of LAT-wide grid web pieces</notes>
          <quo>
            <minus>
              <refer refTo="NADGridWebWidth" />
              <refer refTo="NADGridWebOutsideWidth" />
            </minus>
            <const value="2" uType="count" />
          </quo>
        </const>
        
        <const name="LATGridWeb_dtn" >
          <notes>Neg. transverse offset of LAT-wide grid web pieces</notes>
          <uminus>
            <refer refTo="LATGridWeb_dt" />
          </uminus>
        </const>
      </derCategory>

      &ACDDerived;


      <derCategory name="derGlobal" save="true" >
        <overview>A few more constants needed for the outermost 
                 LAT compositions</overview>
        <const name="LATX" >
          <notes>X-dimension of an envelope for the LAT,
                not including thermal blanket</notes>
          <refer refTo="ACDTotalX" />
        </const>
        <const name="LATY" >
          <notes>Y-dimension of an envelope for the LAT,
                 not including thermal blanket</notes>
          <refer refTo="ACDTotalY" />
        </const>

        <const name="LATZ" >
          <notes>Z-dimension of an envelope for the LAT,
                 not including thermal blanket</notes>
          <max>
            <refer refTo="ACDSide_z" />
            <add>
              <refer refTo="sideOverlap" />
              <refer refTo="ACDTop_z" />
              <refer refTo="ACDTopSupportThick" />
                 <!-- Guess at standoff value  -->
              <refer refTo="ACDTKRStayClear" />
              <refer refTo="towersTotalZ" />
            </add>
          </max>
        </const>

        <const name="bigXZDim" >
          <notes>Something big enough (for X and Z) to position 
                 everything inside,
                 with origin where it should be, at the very front
                 of the grid.</notes>
          <mul>
            <const value="2" uType="count" />
            <max>
              <add>
                <refer refTo = "towersTotalZ" />
                <refer refTo = "NADSpacecraftZ" />
              </add>
              <refer refTo = "ACDTotalX" />
            </max>
          </mul>
        </const>

        <const name="NADTotalPanelLen" >
          <notes>Length of panel proper plus connecting rod</notes>
          <add>
            <refer refTo="NADSolarRodLength" />
            <refer refTo="NADSolarPLength" />
          </add>
        </const>


        <const name="bigYDim" >
          <notes>Something big enough to use as Y dimension of
                 envelope (takes into account solar panels)
                 </notes>
          <mul>
            <const value = "2" uType="count" />
            <add>
              <refer refTo="NADTotalPanelLen" />
              <const value = "100" />          
              <refer refTo="NADSpacecraftR" />
            </add>
          </mul>
        </const>
             

        <const name="solarPanel_dy" >
          <notes>y-displacement of panel-only part of solar panel w.r.t.
                 envelope including panel and connecting rod</notes>
          <quo>
            <refer refTo="NADSolarRodLength" />
            <const value="2" uType="count" />
          </quo>
        </const>

        <const name="solarRod_dy" >
          <notes>y-displacement of rod part of solar panel w.r.t.
                 envelope including panel and connecting rod</notes>
          <uminus>
            <quo>
              <refer refTo="NADSolarPLength" />
              <const value="2" uType="count" />
            </quo>
          </uminus>
        </const>

        <const name="solarPanelEnv_dy" >
          <notes>y-displacement of entire (+Y) solar panel envelope w.r.t.
                 Ritz origin.</notes>
          <add>
            <refer refTo="NADSpacecraftR" />
            <quo>
              <refer refTo="NADTotalPanelLen" />
              <const value="2" uType="count" />
            </quo>
          </add>
        </const>
        
        <const name="solarPanelEnv_dyn" >
          <notes>y-displacement of entire (-Y) solar panel envelope w.r.t.
                 Ritz origin.</notes>
          <uminus>
            <refer refTo="solarPanelEnv_dy" />
          </uminus>
        </const>

        <!-- Put solar panels just halfway down the spacecraft -->
        <const name="solarPanelEnv_dz" >
          <notes>z-displacement of entire solar panel envelope w.r.t.
                 Ritz origin.</notes>
          <refer refTo="spacecraft_dz" />
        </const>

        <const name="solarPanelSi_dz" >
          <notes>z-displacement of Si part of solar panel w.r.t.
                 envelope including panel and connecting rod</notes>
          <quo>
            <refer refTo="NADSolarCoreThick" />
            <const value="2" uType="count" />
          </quo>
        </const>

        <const name="solarPanelCore_dz" >
          <notes>z-displacement of core part of solar panel w.r.t.
                 envelope including panel and connecting rod</notes>
          <uminus>
            <quo>
              <refer refTo="NADSolarSiThick" />
              <const value="2" uType="count" />
            </quo>
          </uminus>
        </const>
          

        <const name="NADSolarRodDiam" >
          <notes>Diameter of rods connecting solar panels to spacecraft</notes>
          <add>
            <refer refTo="NADSolarRodR" />
            <refer refTo="NADSolarRodR" />
          </add>
        </const>

        <const name="LATZHalf" >
          <notes>convenience</notes>
          <quo>
            <refer refTo="LATZ" />
            <const value="2" uType="count" />
          </quo>
        </const>

        <const name="towers_dz" >
          <notes>Displacement necessary to get towers origin in the
                 right place</notes>
          <minus>
            <refer refTo="towersTotalHalfZ" />
            <refer refTo="CALVertStayClear" />
          </minus>
        </const>

        <const name="spacecraft_dz">
          <notes>Z displacement of spacecraft relative to Ritz origin.
                It goes immediately under the LAT</notes>
          <uminus>
            <add>
              <refer refTo="NADGridFlangeZ" />
              <refer refTo="CALVertStayClear" />
              <refer refTo="NADSpacecraftGap" />
              <quo> 
                 <refer refTo="NADSpacecraftZ" />
                 <const value="2" uType="count" />
              </quo>
            </add>
          </uminus>
        </const>

<!-- have to do analogous 5 constants for side tile locations -->

        <const name="tileSide_dz">
          <notes>displacement in z of side tiles rel. to Ritz origin.
            Compute relative to ACDTop_d.  Find coordinate of top of
            ACD side, then subtract half side height.
          </notes>
          <minus>
            <add>
              <refer refTo="ACDTop_d" />
              <refer refTo="sideOverlap"/>
              <quo>
                <refer refTo="ACDTop_z"/>
                <const value="2" uType="count" />
              </quo>
            </add>               
            <quo>
               <refer refTo="ACDSide_z" />
               <const value="2" uType="count" />
            </quo>
          </minus>
        </const>

        <const name="tileXSide_dx" >
          <notes>Displacement in x of tiles along a side || to Y axis
               (so of constant X), relative to center of LATenv</notes>
          <add>
            <refer refTo="ribbonThickness" />
            <refer refTo="ribbonGap" />
            <quo>
              <add> 
                <refer refTo="tileThickness" />
                <refer refTo="ACDTopTransverse" />
              </add>
              <const value="2" uType="count" />
            </quo>
          </add>
        </const>

        <const name="tileXSide_dxn" >
          <notes>Displacement in x of tiles along a side at fixed -x
                relative to center of LATenv</notes>
          <uminus>
            <refer refTo="tileXSide_dx" />
          </uminus>
        </const>

        <const name="tileYSide_dy" >
          <notes>Displacement in y of tiles at fixed +y
                relative to center of LATenv</notes>
          <refer refTo="tileXSide_dx" />
        </const>

        <const name="tileYSide_dyn" >
          <notes>Displacement in y of tiles at fixed -y
                relative to center of LATenv</notes>
          <uminus>
            <refer refTo="tileYSide_dy" />
          </uminus>
        </const>

        <const name="ribbonSide_dz">
          <notes>displacement in z of side ribbons rel. to Ritz origin.
           Ribbons go down as far as tile sides but don't go up quite as
           high.</notes>
          <minus>
            <refer refTo="tileSide_dz" />
            <quo>
              <add>
                <refer refTo="sideOverlap" />
                <refer refTo="tileThickness" />
                <refer refTo="ribbonGap" />
              </add>
              <const value="2" uType="count" />
            </quo>
          </minus>
        </const>


        <const name="ribbonYSide_dy" >
          <notes>Displacement in y of tapes along a side at fixed +y
                relative to center of LATenv.  Compute from displacement
                of tile sides (as 4 Nov 2002)</notes>
          <minus>
            <refer refTo="tileYSide_dy" />
            <add>
              <refer refTo="ribbonGap" />
              <quo>
                <add>
                  <refer refTo="ribbonThickness" />
                  <refer refTo="tileThickness" />
                </add>
                <const value="2" uType="count" />
              </quo>
            </add>
          </minus>
        </const>

        <const name="ribbonYSide_dyn" >
          <notes>Displacement in y of ribbons along a side at fixed -y
                 relative to center of LATenv</notes>
          <uminus>
            <refer refTo="ribbonYSide_dy" />
          </uminus>
        </const>

        <const name="ribbonXSide_dx" >
          <notes>Displacement in x of ribbons at fixed +x
                relative to center of LATenv.  Same as for perp. sides
                (Nove 4 2002)</notes>
          <refer refTo="ribbonYSide_dy" />
        </const>

        <const name="ribbonXSide_dxn" >
          <notes>Displacement in x of ribbons at fixed -x
                relative to center of LATenv</notes>
          <uminus>
            <refer refTo="ribbonXSide_dx" />
          </uminus>
        </const>


      </derCategory>

      <derCategory name="derNAD" save="true">
        <overview>Derived not-a-detector constants</overview>
        <const name="NADGridWebWidth" >
          <notes>Full width of grid web in X or Y</notes>
          <add>
            <mul>
              <const value="4" uType="count" />
              <refer refTo="NADGridWebCutout" />
            </mul>
            <mul>
              <const value="3" uType="count" />
              <refer refTo="NADGridWebInner" />
            </mul>
            <mul>
              <const value="2" uType="count" />
              <refer refTo="NADGridWebOuter" />
            </mul>
          </add>
        </const>

        <const name="NADGridFlangeWidth" >
          <notes>Full width of grid flange in X or Y</notes>
          <add>
            <refer refTo="NADGridWebWidth" />
            <mul>
              <const value="2" uType="count" />
              <refer refTo="NADGridFlangeOverhang" />
            </mul>
          </add>
        </const>

        <const name="NADGridFlangeOuter" >
          <notes>Width of outer piece of flange (wider than web)</notes>
          <quo>
            <minus>
              <refer refTo="NADGridFlangeWidth" />
              <add>
                <mul>
                  <const value="4" uType="count" />
                  <refer refTo="NADGridFlangeCutout" />
                </mul>
                <mul>
                  <const value="3" uType="count" />
                  <refer refTo="NADGridFlangeInner" />
                </mul>
              </add>
            </minus>
            <const value="2" uType="count" />
          </quo>
        </const>

        <const name="NADGridFlangeInnerHalf">
          <notes> convenience</notes>
          <quo>
            <refer refTo="NADGridFlangeInner" />
            <const value="2" uType="count" />
          </quo>
        </const>

        <const name="NADGridWebInnerHalf">
          <notes> convenience</notes>
          <quo>
            <refer refTo="NADGridWebInner" />
            <const value="2" uType="count" />
          </quo>
        </const>

        <!-- The per-tower web (flange) is picture-frame shaped.
             Break it into 4 boxes. Height of each is web (flange)
             height.  Width of each is NADGridWebInnerHalf
             (NADGridFlangeInnerHalf).  Two have length = towerPitch;
             the others are shorter by NADGridWebInner (NADGridFlangeInner)
        -->
        <const name="NADGridLenLong" >
            <notes>Length of longer outer (not per-tower) grid pieces</notes>
          <refer refTo="towerPitch" />
        </const>

        <const name="NADGridWebLenShort" >
          <notes>Length of shorter outer (not per-tower) 
     grid web pieces</notes>
          <minus> 
            <refer refTo="towerPitch" />
            <refer refTo="NADGridWebInner" />
          </minus>
        </const>

        <const name="NADGridFlangeLenShort" >
          <notes>Length of shorter outer (not per-tower) 
     grid flange pieces</notes>
          <minus> 
            <refer refTo="towerPitch" />
            <refer refTo="NADGridFlangeInner" />
          </minus>
        </const>

<!-- Define some constants for the outside "picture frames" for
     grid web and grid flange -->
        <const name="NADGridWebOutsideWidth" >
          <notes>Width of web outside towers (i.e., 4 * towerPitch)</notes>
          <quo>
            <minus>
              <refer refTo="NADGridWebWidth" />
              <mul>
                <const value="4" uType="count" />
                <refer refTo="towerPitch" />
              </mul>
            </minus>
            <const value="2" uType="count" />
          </quo>
        </const>

        <const name="NADGridFlangeOutsideWidth" >
          <notes>Width of flange outside towers (i.e., 4 * towerPitch)</notes>
          <quo>
            <minus>
              <refer refTo="NADGridFlangeWidth" />
              <mul>
                <const value="4" uType="count" />
                <refer refTo="towerPitch" />
              </mul>
            </minus>
            <const value="2" uType="count" />
          </quo>
        </const>

        <const name="NADGridWebOutsideLenShort" >
          <notes>Length of short outside piece of grid web</notes>
          <minus>
            <refer refTo="NADGridWebWidth" />
            <mul>
              <const value="2" uType="count" />
              <refer refTo="NADGridWebOutsideWidth" />
            </mul>
          </minus>
        </const>

        <const name = "NADGridFlange_dz" >
          <notes>Displacement of flange w.r.t. Ritz origin, which is
                 at its top face</notes>
          <uminus>
            <quo>
              <refer refTo="NADGridFlangeZ" />
              <const value="2" uType="count" />
            </quo>
          </uminus>
        </const>

        <const name = "NADGridWeb_dz" >          
          <notes>Displacement of grid  w.r.t. Ritz origin. Web is
                 immediately below flange.</notes>
          <uminus>
            <add>
               <refer refTo="NADGridFlangeZ" />
               <quo>
                 <refer refTo="NADGridWebZ" />
                 <const value="2" uType="count" />
               </quo>
             </add>
          </uminus>
        </const>
           

        <const name="NADGridFlangeOutsideLenShort" >
          <notes>Length of short outside piece of grid web</notes>
          <minus>
            <refer refTo="NADGridFlangeWidth" />
            <mul>
              <const value="2" uType="count" />
              <refer refTo="NADGridFlangeOutsideWidth" />
            </mul>
          </minus>
        </const>

        <const name="NADBlanketTopX" >
          <notes>X dimension of top of thermal blanket</notes>
          <add>
            <refer refTo="ACDTotalX" />
            <mul>
              <const value="2" uType="count" />
              <refer refTo="NADBlanketThick" />
            </mul>
          </add>
        </const>

        <const name="NADBlanketTopY" >
          <notes>Y dimension of top of thermal blanket</notes>
          <add>
            <refer refTo="ACDTotalY" />
            <mul>
              <const value="2" uType="count" />
              <refer refTo="NADBlanketThick" />
            </mul>
          </add>
        </const>

        <const name="NADBlanketSideY_l" >
          <notes>length in long (x) dimension of Y-sides of blanket</notes>
          <refer refTo="NADBlanketTopX" />
        </const>

        <const name="NADBlanketSideX_l" >
          <notes>length in long (Y) dimension of X-sides of blanket, shorter
            than Y-sides because Y-sides cover corners</notes>
          <refer refTo="ACDTotalY" />
        </const>

        <const name="NADBlanketSideZ" >
          <notes>height of a side piece of the blanket:  approx.
             height of ACD side tiles + height of cal</notes>
          <add>
            <refer refTo="ACDSide_z" />
            <refer refTo="CALVertStayClear"/>
          </add>
        </const>
               

        <const name="NADBlanket_dx">
          <notes>x displacement of pos. x side of blanket</notes>
          <quo>
            <add>
              <refer refTo = "ACDTotalX" />
              <refer refTo = "NADBlanketThick" />
            </add>
            <const value="2" uType="count" />
          </quo>
        </const>             

        <const name="NADBlanket_dxn">
          <notes>x displacement of neg. x side of blanket</notes>
          <uminus>
            <refer refTo = "NADBlanket_dx" />
          </uminus>
        </const>
 

        <const name="NADBlanket_dy">
          <notes>y displacement of pos. y side of blanket</notes>
          <quo>
            <add>
              <refer refTo = "ACDTotalY" />
              <refer refTo = "NADBlanketThick" />
            </add>
            <const value="2" uType="count" />
          </quo>
        </const>             

        <const name="NADBlanket_dyn">
          <notes>y displacement of neg. y side of blanket</notes>
          <uminus>
            <refer refTo = "NADBlanket_dy" />
          </uminus>
        </const>
 
        <const name="NADBlanketTop_dz">
          <notes>z displacement of top of blanket</notes>
          <add>
            <refer refTo="tileSide_dz" />
            <quo> 
              <add>
                <refer refTo="NADBlanketThick" />
                <refer refTo="ACDSide_z" />
              </add>
              <const value="2" uType="count" />
            </quo>
          </add>
        </const>

        <const name="NADBlanketSides_dz">
          <notes>z displacement of sides of blanket.  Sits
                  just under blanket top.</notes>
            <minus>
              <refer refTo="NADBlanketTop_dz" />
              <quo>
                <add>
                  <refer refTo="NADBlanketSideZ" />
                  <refer refTo="NADBlanketThick" />
                </add>
                <const value="2" uType="count" />
              </quo>
            </minus>
          </const>

          <const name="slab_dz">
            <notes>z displacement of slab in front of LAT</notes>
            <add>
              <refer refTo="NADBlanketTop_dz" />
              <refer refTo="slabZGap" />
              <quo>
                <add>
                  <refer refTo="slabZ" />
                  <refer refTo="NADBlanketThick" />
                </add>
                <const value="2" uType="count" />
              </quo>
            </add>
          </const>
      </derCategory>
   </derived>











